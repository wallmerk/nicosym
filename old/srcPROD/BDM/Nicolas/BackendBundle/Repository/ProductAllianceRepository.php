<?php

namespace BDM\Nicolas\BackendBundle\Repository;

/**
 * ProductAllianceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductAllianceRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAlliancesByCategory($id_category, $id_sub_category)
    {
        $qb = $this->createQueryBuilder('a')
            ->innerJoin('a.products', 'p')
            ->join('BDMNicolasBackendBundle:ProductSubCategory', 's', 'WITH', 'p.sub_category = s.id');
        if ($id_sub_category != 0) {
            $qb->where('s.id = :id_sub_category')
                ->setParameter('id_sub_category', $id_sub_category);
        } else {
            $qb->join('BDMNicolasBackendBundle:ProductCategory', 'c', 'WITH', 'c.id = s.category')
                ->where('c.id = :id')
                ->setParameter('id', $id_category);
        }
        return $qb->getQuery()
            ->getResult();


    }

    public function getAlliancesByProduct($id)
    {
        return $this->createQueryBuilder('a')
            ->innerJoin('a.products', 'p', 'WITH', 'p.id = :id')
            ->setParameter('id', $id)
            ->getQuery()
            ->getResult();
    }

//    public function getAlliancesByAlliance($alliance)
//    {
//        return $this->createQueryBuilder('a')
//            ->innerJoin('a.products', 'p')
//            ->innerJoin('p.alliances', 'a', 'WITH', 'a.id = :id_alliance')
//            ->setParameter('id_alliance', $alliance)
//            ->getQuery()
//            ->getResult();
//    }


    public function getAlliancesByProducts($ids)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->select('a');
        $qb->from('BDMNicolasBackendBundle:ProductAlliance', 'a');
        $qb->where($qb->expr()->in('a.id', $ids));

        return $qb->getQuery()->getResult();
    }
}
