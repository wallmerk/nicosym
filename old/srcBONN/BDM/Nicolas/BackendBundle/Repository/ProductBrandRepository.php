<?php

namespace BDM\Nicolas\BackendBundle\Repository;

/**
 * ProductBrandRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductBrandRepository extends \Doctrine\ORM\EntityRepository
{

    public function getBrandsByCategory($id_category, $id_sub_category, $table = '', $criteria = '')
    {
        $qb = $this->createQueryBuilder('b')
            ->join('BDMNicolasBackendBundle:Product', 'p', 'WITH', 'b.id = p.brand')
            ->join('BDMNicolasBackendBundle:ProductSubCategory', 's', 'WITH', 'p.sub_category = s.id');
        if ($table == 'alliance') {
            $qb->innerJoin('p.alliances', 'a', 'WITH', 'a.slug = :alliance')
                ->setParameter('alliance', $criteria);
        }
        if ($id_sub_category != 0) {
            $qb->where('s.id = :id_sub_category')
                ->setParameter('id_sub_category', $id_sub_category);
        } else {
            $qb->join('BDMNicolasBackendBundle:ProductCategory', 'c', 'WITH', 'c.id = s.category')
                ->where('c.id = :id')
                ->setParameter('id', $id_category);
        }
        return $qb->getQuery()
            ->getResult();
    }

    public function getBrandsByAlliance($alliance)
    {
        return $this->createQueryBuilder('b')
            ->join('BDMNicolasBackendBundle:Product', 'p', 'WITH', 'b.id = p.brand')
            ->innerJoin('p.alliances', 'a', 'WITH', 'a.id = :id_alliance')
            ->setParameter('id_alliance', $alliance)
            ->getQuery()
            ->getResult();
    }


    public function getBrandsByProducts($ids)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        $qb->select('b');
        $qb->from('BDMNicolasBackendBundle:ProductBrand', 'b');
        $qb->where($qb->expr()->in('b.id', $ids));

        return $qb->getQuery()->getResult();
    }
}
